{
	"id": 13538,
	"name": "medusa",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 13738,
			"name": "RequestQueryFields",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields that can be passed in the query parameters of a request."
					}
				]
			},
			"children": [
				{
					"id": 13739,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Use "
									},
									{
										"kind": "code",
										"text": "`fields`"
									},
									{
										"kind": "text",
										"text": " instead and the relations will be inferred"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13740,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13741,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13742,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13743,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13739,
						13740,
						13741,
						13742,
						13743
					]
				}
			]
		},
		{
			"id": 13717,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
					}
				]
			},
			"typeParameters": [
				{
					"id": 13737,
					"name": "Cradle",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
							"qualifiedName": "ModuleImplementations"
						},
						"name": "ModuleImplementations",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "literal",
								"value": "resolve"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 13718,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13719,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 13720,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 13721,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 13722,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 13721,
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 13723,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 13721,
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 13737,
													"name": "Cradle",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"id": 13724,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 13725,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 13726,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 13727,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 13725,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										13719
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 13758,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 13759,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13760,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13760
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 13752,
			"name": "MessageBody",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 13757,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13753,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 13754,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13755,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 13758,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13756,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 13757,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								13754,
								13755,
								13756
							]
						}
					]
				}
			}
		},
		{
			"id": 13744,
			"name": "MedusaPricingContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13745,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 13746,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13747,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13748,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13749,
							"name": "customer_group_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								13746,
								13747,
								13748,
								13749
							]
						}
					]
				}
			}
		},
		{
			"id": 13539,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13540,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 13548,
								"name": "Entity",
								"package": "@medusajs/medusa",
								"qualifiedName": "FindConfig.Entity",
								"refersToTypeParameter": true
							}
						}
					}
				},
				{
					"id": 13541,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13542,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13543,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 13544,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 13545,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 13546,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 13547,
											"name": "K",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ASC"
											},
											{
												"type": "literal",
												"value": "DESC"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13540,
						13541,
						13542,
						13543,
						13544
					]
				}
			],
			"typeParameters": [
				{
					"id": 13548,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 13549,
			"name": "QueryConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 13559,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13550,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 13551,
							"name": "defaults",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Default fields and relations to return"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 13559,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							}
						},
						{
							"id": 13552,
							"name": "defaultFields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`defaults`"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 13559,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							}
						},
						{
							"id": 13553,
							"name": "defaultRelations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`defaultFields`"
											},
											{
												"kind": "text",
												"text": " instead and the relations will be inferred"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 13554,
							"name": "allowed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fields and relations that are allowed to be requested"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 13555,
							"name": "allowedFields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`allowed`"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 13556,
							"name": "allowedRelations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`allowedFields`"
											},
											{
												"kind": "text",
												"text": " instead and the relations will be inferred"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 13557,
							"name": "defaultLimit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 13558,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								13551,
								13552,
								13553,
								13554,
								13555,
								13556,
								13557,
								13558
							]
						}
					]
				}
			}
		},
		{
			"id": 13560,
			"name": "ClassConstructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 13564,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13561,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 13562,
							"name": "new ClassConstructor",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 13563,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 13564,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 13565,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 13717,
				"name": "coreMedusaContainer",
				"package": "@medusajs/types",
				"qualifiedName": "MedusaContainer"
			}
		},
		{
			"id": 13566,
			"name": "Logger",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13567,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 13568,
							"name": "panic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 13569,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 13570,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 13571,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 13572,
							"name": "shouldLog",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 13573,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 13574,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 13575,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 13576,
							"name": "setLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 13577,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 13578,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 13579,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 13580,
							"name": "unsetLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 13581,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 13582,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 13583,
							"name": "activity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 13584,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 13585,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 13586,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 13587,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 13588,
							"name": "progress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 13589,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 13590,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 13591,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 13592,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 13593,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 13594,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 13595,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 13596,
													"name": "messageOrError",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 13597,
													"name": "error",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 13598,
							"name": "failure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 13599,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 13600,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 13601,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 13602,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 13603,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 13604,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 13605,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 13606,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 13607,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 13608,
							"name": "debug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 13609,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 13610,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 13611,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 13612,
							"name": "info",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 13613,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 13614,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 13615,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 13616,
							"name": "warn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 13617,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 13618,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 13619,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 13620,
							"name": "log",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 13621,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 13622,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 13623,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								13568,
								13572,
								13576,
								13580,
								13583,
								13588,
								13593,
								13598,
								13603,
								13608,
								13612,
								13616,
								13620
							]
						}
					]
				}
			}
		},
		{
			"id": 13624,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 13628,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13625,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 13626,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 13627,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 13628,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 13629,
			"name": "MedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13654,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 13655,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13656,
									"name": "customer_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13657,
									"name": "userId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13656,
										13657
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.user"
					}
				},
				{
					"id": 13630,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 13658,
						"name": "Body",
						"package": "@medusajs/medusa",
						"qualifiedName": "MedusaRequest.Body",
						"refersToTypeParameter": true
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedBody"
					}
				},
				{
					"id": 13631,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 13738,
								"name": "RequestQueryFields",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedQuery"
					}
				},
				{
					"id": 13632,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: shouldn't this correspond to returnable fields instead of allowed fields? also it is used by the cleanResponseData util"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedProperties"
					}
				},
				{
					"id": 13633,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation, skip, take and order to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 13539,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.listConfig"
					}
				},
				{
					"id": 13634,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 13539,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.retrieveConfig"
					}
				},
				{
					"id": 13635,
					"name": "remoteQueryConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing fields and variables to be used with the remoteQuery"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 13636,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13637,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 13638,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 13639,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 13640,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 13641,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 13642,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														13640,
														13641,
														13642
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13637,
										13638
									]
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.remoteQueryConfig"
					}
				},
				{
					"id": 13643,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the fields that are filterable e.g "
							},
							{
								"kind": "code",
								"text": "`{ id: Any<String> }`"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.filterableFields"
					}
				},
				{
					"id": 13644,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.includes"
					}
				},
				{
					"id": 13645,
					"name": "allowedFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`allowed`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedFields"
					}
				},
				{
					"id": 13646,
					"name": "allowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields set\nby the api"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowed"
					}
				},
				{
					"id": 13647,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.errors"
					}
				},
				{
					"id": 13648,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 13717,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.scope"
					}
				},
				{
					"id": 13649,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 13650,
					"name": "rawBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 13651,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.requestId"
					}
				},
				{
					"id": 13652,
					"name": "pricingContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that carries the context that is used to calculate prices for variants"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 13744,
						"name": "MedusaPricingContext",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13653,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic context object that can be used across the request lifecycle"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13654,
						13630,
						13631,
						13632,
						13633,
						13634,
						13635,
						13643,
						13644,
						13645,
						13646,
						13647,
						13648,
						13649,
						13650,
						13651,
						13652,
						13653
					]
				}
			],
			"typeParameters": [
				{
					"id": 13658,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
						"qualifiedName": "e.Request"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../node_modules/@types/express-serve-static-core/index.d.ts",
								"qualifiedName": "ParamsDictionary"
							},
							"name": "core.ParamsDictionary",
							"package": "@types/express-serve-static-core",
							"qualifiedName": "ParamsDictionary"
						},
						{
							"type": "intrinsic",
							"name": "any"
						},
						{
							"type": "reference",
							"target": 13658,
							"name": "Body",
							"package": "@medusajs/medusa",
							"qualifiedName": "MedusaRequest.Body",
							"refersToTypeParameter": true
						}
					],
					"name": "Request",
					"package": "@types/express",
					"qualifiedName": "e.Request"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 13664,
					"name": "AuthenticatedMedusaRequest"
				}
			]
		},
		{
			"id": 13659,
			"name": "AuthContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13660,
					"name": "actor_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13661,
					"name": "actor_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13662,
					"name": "auth_identity_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13663,
					"name": "app_metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13660,
						13661,
						13662,
						13663
					]
				}
			]
		},
		{
			"id": 13664,
			"name": "AuthenticatedMedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13690,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 13691,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13692,
									"name": "customer_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13693,
									"name": "userId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13692,
										13693
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13654,
						"name": "MedusaRequest.user"
					}
				},
				{
					"id": 13666,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "reference",
						"target": 13694,
						"name": "Body",
						"package": "@medusajs/medusa",
						"qualifiedName": "AuthenticatedMedusaRequest.Body",
						"refersToTypeParameter": true
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13630,
						"name": "MedusaRequest.validatedBody"
					}
				},
				{
					"id": 13667,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 13738,
								"name": "RequestQueryFields",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13631,
						"name": "MedusaRequest.validatedQuery"
					}
				},
				{
					"id": 13668,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: shouldn't this correspond to returnable fields instead of allowed fields? also it is used by the cleanResponseData util"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13632,
						"name": "MedusaRequest.allowedProperties"
					}
				},
				{
					"id": 13669,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation, skip, take and order to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 13539,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13633,
						"name": "MedusaRequest.listConfig"
					}
				},
				{
					"id": 13670,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 13539,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13634,
						"name": "MedusaRequest.retrieveConfig"
					}
				},
				{
					"id": 13671,
					"name": "remoteQueryConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing fields and variables to be used with the remoteQuery"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 13672,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13673,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 13674,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 13675,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 13676,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 13677,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 13678,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														13676,
														13677,
														13678
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13673,
										13674
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13635,
						"name": "MedusaRequest.remoteQueryConfig"
					}
				},
				{
					"id": 13679,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the fields that are filterable e.g "
							},
							{
								"kind": "code",
								"text": "`{ id: Any<String> }`"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13643,
						"name": "MedusaRequest.filterableFields"
					}
				},
				{
					"id": 13680,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13644,
						"name": "MedusaRequest.includes"
					}
				},
				{
					"id": 13681,
					"name": "allowedFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`allowed`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13645,
						"name": "MedusaRequest.allowedFields"
					}
				},
				{
					"id": 13682,
					"name": "allowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields set\nby the api"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13646,
						"name": "MedusaRequest.allowed"
					}
				},
				{
					"id": 13683,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13647,
						"name": "MedusaRequest.errors"
					}
				},
				{
					"id": 13684,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "reference",
						"target": 13717,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13648,
						"name": "MedusaRequest.scope"
					}
				},
				{
					"id": 13685,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13649,
						"name": "MedusaRequest.session"
					}
				},
				{
					"id": 13686,
					"name": "rawBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13650,
						"name": "MedusaRequest.rawBody"
					}
				},
				{
					"id": 13687,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13651,
						"name": "MedusaRequest.requestId"
					}
				},
				{
					"id": 13688,
					"name": "pricingContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that carries the context that is used to calculate prices for variants"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 13744,
						"name": "MedusaPricingContext",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13652,
						"name": "MedusaRequest.pricingContext"
					}
				},
				{
					"id": 13689,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic context object that can be used across the request lifecycle"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13653,
						"name": "MedusaRequest.context"
					}
				},
				{
					"id": 13665,
					"name": "auth_context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 13659,
						"name": "AuthContext",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13690,
						13666,
						13667,
						13668,
						13669,
						13670,
						13671,
						13679,
						13680,
						13681,
						13682,
						13683,
						13684,
						13685,
						13686,
						13687,
						13688,
						13689,
						13665
					]
				}
			],
			"typeParameters": [
				{
					"id": 13694,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 13629,
					"typeArguments": [
						{
							"type": "reference",
							"target": 13694,
							"name": "Body",
							"package": "@medusajs/medusa",
							"qualifiedName": "AuthenticatedMedusaRequest.Body",
							"refersToTypeParameter": true
						}
					],
					"name": "MedusaRequest",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 13695,
			"name": "MedusaResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 13696,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.Response"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 13696,
						"name": "Body",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					}
				],
				"name": "Response",
				"package": "@types/express",
				"qualifiedName": "e.Response"
			}
		},
		{
			"id": 13697,
			"name": "MedusaNextFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.NextFunction"
				},
				"name": "NextFunction",
				"package": "@types/express",
				"qualifiedName": "e.NextFunction"
			}
		},
		{
			"id": 13698,
			"name": "MedusaRequestHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 13704,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 13705,
					"name": "Res",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13699,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 13700,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 13701,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 13629,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13704,
												"name": "Body",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaRequest",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 13702,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 13695,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13705,
												"name": "Res",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaResponse",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 13703,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 13697,
										"name": "MedusaNextFunction",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 13750,
			"name": "SubscriberContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13751,
					"name": "subscriberId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13751
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 13706,
			"name": "SubscriberConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13707,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 13708,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 13709,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 13750,
								"name": "SubscriberContext",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								13708,
								13709
							]
						}
					]
				}
			}
		},
		{
			"id": 13710,
			"name": "SubscriberArgs",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 13716,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13711,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 13712,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 13752,
								"typeArguments": [
									{
										"type": "reference",
										"target": 13716,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "MessageBody",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13713,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13714,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 13717,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13715,
							"name": "pluginOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								13712,
								13713,
								13714,
								13715
							]
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				13738,
				13539,
				13629,
				13659,
				13664,
				13750
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				13717,
				13758,
				13752,
				13744,
				13549,
				13560,
				13565,
				13566,
				13624,
				13695,
				13697,
				13698,
				13706,
				13710
			]
		}
	],
	"packageName": "@medusajs/medusa",
	"symbolIdMap": {
		"13538": {
			"sourceFileName": "../../../../packages/medusa/src/index.js",
			"qualifiedName": ""
		},
		"13539": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig"
		},
		"13540": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"13541": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"13542": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"13543": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"13544": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"13545": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"13546": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.__index"
		},
		"13548": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"13549": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "QueryConfig"
		},
		"13550": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"13551": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaults"
		},
		"13552": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultFields"
		},
		"13553": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultRelations"
		},
		"13554": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowed"
		},
		"13555": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowedFields"
		},
		"13556": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowedRelations"
		},
		"13557": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultLimit"
		},
		"13558": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.isList"
		},
		"13559": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"13560": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "ClassConstructor"
		},
		"13561": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13562": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13563": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"13564": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"13565": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "MedusaContainer"
		},
		"13566": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Logger"
		},
		"13567": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13568": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.panic"
		},
		"13569": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13570": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13571": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "data"
		},
		"13572": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.shouldLog"
		},
		"13573": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13574": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13575": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "level"
		},
		"13576": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.setLogLevel"
		},
		"13577": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13578": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13579": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "level"
		},
		"13580": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.unsetLogLevel"
		},
		"13581": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13582": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13583": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.activity"
		},
		"13584": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13585": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13586": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"13587": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "config"
		},
		"13588": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.progress"
		},
		"13589": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13590": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13591": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"13592": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"13593": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.error"
		},
		"13594": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13595": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13596": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "messageOrError"
		},
		"13597": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "error"
		},
		"13598": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.failure"
		},
		"13599": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13600": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13601": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"13602": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"13603": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.success"
		},
		"13604": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13605": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13606": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"13607": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"13608": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.debug"
		},
		"13609": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13610": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13611": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"13612": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.info"
		},
		"13613": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13614": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13615": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"13616": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.warn"
		},
		"13617": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13618": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13619": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"13620": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.log"
		},
		"13621": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13622": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13623": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"13624": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Constructor"
		},
		"13625": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13626": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13627": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"13628": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"13629": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest"
		},
		"13630": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedBody"
		},
		"13631": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedQuery"
		},
		"13632": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedProperties"
		},
		"13633": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.listConfig"
		},
		"13634": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.retrieveConfig"
		},
		"13635": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.remoteQueryConfig"
		},
		"13636": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"13637": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.fields"
		},
		"13638": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.pagination"
		},
		"13639": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"13640": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.order"
		},
		"13641": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.skip"
		},
		"13642": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.take"
		},
		"13643": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.filterableFields"
		},
		"13644": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.includes"
		},
		"13645": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedFields"
		},
		"13646": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowed"
		},
		"13647": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.errors"
		},
		"13648": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"13649": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.session"
		},
		"13650": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.rawBody"
		},
		"13651": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.requestId"
		},
		"13652": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.pricingContext"
		},
		"13653": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.context"
		},
		"13654": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.user"
		},
		"13655": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13656": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.customer_id"
		},
		"13657": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.userId"
		},
		"13658": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.Body"
		},
		"13659": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext"
		},
		"13660": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext.actor_id"
		},
		"13661": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext.actor_type"
		},
		"13662": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext.auth_identity_id"
		},
		"13663": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext.app_metadata"
		},
		"13664": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest"
		},
		"13665": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest.auth_context"
		},
		"13666": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedBody"
		},
		"13667": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedQuery"
		},
		"13668": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedProperties"
		},
		"13669": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.listConfig"
		},
		"13670": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.retrieveConfig"
		},
		"13671": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.remoteQueryConfig"
		},
		"13672": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"13673": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.fields"
		},
		"13674": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.pagination"
		},
		"13675": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"13676": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.order"
		},
		"13677": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.skip"
		},
		"13678": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.take"
		},
		"13679": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.filterableFields"
		},
		"13680": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.includes"
		},
		"13681": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedFields"
		},
		"13682": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowed"
		},
		"13683": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.errors"
		},
		"13684": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"13685": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.session"
		},
		"13686": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.rawBody"
		},
		"13687": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.requestId"
		},
		"13688": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.pricingContext"
		},
		"13689": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.context"
		},
		"13690": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.user"
		},
		"13691": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"13692": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.customer_id"
		},
		"13693": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.userId"
		},
		"13694": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest.Body"
		},
		"13695": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaResponse"
		},
		"13696": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "Body"
		},
		"13697": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaNextFunction"
		},
		"13698": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequestHandler"
		},
		"13699": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"13700": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"13701": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "req"
		},
		"13702": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "res"
		},
		"13703": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "next"
		},
		"13704": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "Body"
		},
		"13705": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "Res"
		},
		"13706": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberConfig"
		},
		"13707": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"13708": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.event"
		},
		"13709": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.context"
		},
		"13710": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberArgs"
		},
		"13711": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"13712": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.data"
		},
		"13713": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.eventName"
		},
		"13714": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.container"
		},
		"13715": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.pluginOptions"
		},
		"13716": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "T"
		},
		"13717": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"13718": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"13719": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"13720": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"13721": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "K"
		},
		"13722": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"13723": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"13724": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"13725": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"13726": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"13727": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"13737": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "Cradle"
		},
		"13738": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"13739": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.expand"
		},
		"13740": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.fields"
		},
		"13741": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"13742": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"13743": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"13744": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "MedusaPricingContext"
		},
		"13745": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type"
		},
		"13746": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.region_id"
		},
		"13747": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.currency_code"
		},
		"13748": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.customer_id"
		},
		"13749": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.customer_group_id"
		},
		"13750": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext"
		},
		"13751": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext.subscriberId"
		},
		"13752": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "MessageBody"
		},
		"13753": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"13754": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"13755": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"13756": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"13757": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"13758": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"13759": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"13760": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/medusa/src/index.js"
		},
		"reflections": {
			"1": 13538
		}
	}
}